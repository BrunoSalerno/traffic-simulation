#import matplotlib
#matplotlib.use('TkAgg')
import matplotlib.pyplot as plt

import numpy as np
import pandas as pd

from ctm import Simulation

def plot_intervals(data, var, edges=None):
    for edge_i in data:
        if not edges or (edge_i in edges):
            ys = [e[var] for e in data[edge_i]]
            print('edge {}'.format(edge_i), var,ys)
            plt.plot(ys, label='{} edge {}'.format(var, edge_i))


def plot_interval(interval, data, var):
    ys =  [data[edge][interval][var] for edge in data]
    plt.plot(ys, label='Interval {}, {}'.format(interval, var))


if __name__ == '__main__':
    edges = 5
    m = 3.0
    tau = 1.4 / 3600
    n_iters = 60
    delta_t = 10 / 3600 # 10 s
    delta_x = 0.5 # 500 m
    v0 = 15.0
    p_m = 360.0

    # Rule:
    # delta_t < delta_x / v0
    # Treiber et al 2013, p. 100

    p_as_edge1 = [39.66, 45.41, 37.4, 38.44, 40.51, 45.58, 36.77, 35.85, 43.43, 43.6, 46.7, 43.85, 35.7, 30.57, 35.52, 37.18, 28.85, 25.41, 20.84, 25.27, 33.91, 34.82, 40.46, 46.66, 45.96, 49.75, 48.58, 46.55, 45.61, 38.95, 39.12, 41.48, 42.33, 38.86, 30.46, 24.35, 33.88, 38.52, 39.18, 36.59, 33.76, 30.41, 37.9, 37.18, 36.17, 38.63, 34.86, 38.08, 37.03, 40.2, 38.91, 41.49, 44.35, 37.85, 41.08, 40.15, 47.25, 45.43, 38.09, 37.97, 31.54, 40.69, 44.95, 44.65, 39.13, 38.01, 35.61, 20.58, 20.17, 22.31, 29.85, 40.3, 37.25, 40.91, 38.01, 34.68, 34.56, 39.37, 39.21, 37.15, 34.96, 33.39, 37.64, 45.59, 59.17, 65.09, 60.0, 51.57, 43.81, 40.9, 32.98, 35.85, 37.46, 37.17, 41.28, 38.2, 31.33, 33.64, 32.95, 43.87, 45.3, 39.9, 36.65, 32.91, 36.97, 39.58, 42.73, 49.3, 44.48, 42.42, 43.28, 45.67, 47.23, 50.01, 47.85, 41.39, 40.26, 50.2, 56.41, 60.36, 49.64, 47.48, 44.43, 40.1, 39.04, 37.19, 40.5, 42.63, 53.75, 56.56, 56.59, 52.32, 43.03, 39.71, 36.99, 28.56, 24.02, 24.31, 32.39, 37.3, 38.51, 40.0, 35.87, 39.17, 39.25, 42.13, 46.11, 38.33, 37.64, 36.29, 28.0, 22.24, 23.44, 32.54, 43.99, 50.27, 49.09, 51.21, 46.53, 37.15, 30.91, 28.8, 34.19, 42.16, 44.83, 50.4, 52.68, 45.14, 35.39, 23.47, 25.63, 28.38, 31.15, 40.1, 39.18, 38.11, 36.06, 33.22, 37.24, 44.96, 38.96, 36.03, 38.07, 39.03, 38.26, 33.54, 30.33, 28.42, 23.01, 20.97, 29.74, 33.78, 37.19, 32.5, 28.23, 31.8, 39.01, 43.44, 45.63, 37.07, 27.59, 25.21, 26.06, 26.84, 25.85, 30.57, 30.34, 35.67, 31.06, 30.15, 31.21, 33.67, 36.75, 38.9, 38.43, 43.32, 45.73, 38.34, 40.49, 38.88, 35.14, 36.57, 42.32, 49.57, 57.32, 51.39, 47.63, 51.89, 49.06, 50.45, 43.77, 34.87, 30.14, 37.33, 46.85, 47.3, 42.25, 32.93, 34.19, 35.91, 35.27, 40.92, 41.59, 55.64, 58.86, 53.47, 53.9, 40.75, 42.26, 39.5, 42.55, 48.17, 49.16, 49.54, 45.24, 41.48, 42.27, 52.06, 50.46, 49.65, 52.12, 42.04, 49.22, 48.65, 40.56, 49.72, 41.61, 41.94, 42.89, 37.4, 38.3]
    p_as_iter1 = [39.66,32.73,39.56,45.7,40.50]

    q_as_edge1 = [531.444, 601.6825, 499.664, 529.3187999999999, 564.7094, 626.2692, 489.40870000000007, 493.6545, 604.1113, 605.168, 637.922, 589.7825, 490.16100000000006, 420.9489, 491.24160000000006, 524.6098, 409.67, 361.83840000000004, 311.558, 372.2271, 503.5634999999999, 504.1936, 581.8148, 660.7056, 641.1419999999999, 683.0675, 673.3187999999999, 638.2005, 623.0326, 526.9935, 522.252, 564.5427999999999, 584.5773, 537.8224, 426.1354, 346.50050000000005, 492.6152, 557.7696000000001, 563.4084, 510.06460000000004, 465.888, 409.9268, 508.239, 490.4042, 493.35880000000003, 528.8447, 495.7092, 538.0704, 522.4933, 560.388, 545.5182, 590.4027000000001, 620.4565, 517.0310000000001, 557.4556, 531.9875, 638.8199999999999, 616.9394, 514.5959, 521.7078, 437.77520000000004, 572.5083, 635.1435000000001, 617.956, 530.9941, 505.9131, 468.2715, 281.94599999999997, 286.8174, 321.4871, 420.885, 561.3789999999999, 505.855, 557.1941999999999, 528.3389999999999, 491.4156, 486.6048, 544.4870999999999, 528.1587000000001, 505.23999999999995, 480.7, 467.46000000000004, 521.314, 615.9209000000001, 801.7535, 874.1587000000001, 816.0, 716.3073, 620.7877, 588.551, 468.9756, 499.749, 522.1924, 520.7517, 581.2224, 542.44, 444.57269999999994, 469.9508, 450.75600000000003, 604.0899, 635.559, 571.7669999999999, 527.3935, 472.2584999999999, 512.7738999999999, 546.5998, 584.9736999999999, 682.3119999999999, 614.2687999999999, 573.0942, 582.116, 600.1038000000001, 628.6313, 675.135, 638.7975, 554.626, 544.3152, 697.7800000000001, 813.4322, 866.7696, 692.478, 650.0011999999999, 608.2466999999999, 554.182, 542.656, 516.1972, 572.265, 600.2304, 748.2, 770.9128000000001, 763.3991000000001, 694.8095999999999, 591.6625, 560.7052, 528.9570000000001, 413.54879999999997, 348.7704, 352.2519, 457.99460000000005, 515.8589999999999, 527.2018999999999, 547.2, 507.2018, 554.2555, 544.7900000000001, 576.7597000000001, 625.7127, 521.288, 520.9376, 510.6003, 403.48, 333.3776, 339.6456, 478.01259999999996, 637.4151, 729.9204, 700.5143, 722.061, 649.0935, 512.67, 425.3216, 405.216, 468.06109999999995, 560.3063999999999, 573.824, 652.1759999999999, 700.644, 602.619, 472.4565, 318.48789999999997, 364.9712, 411.2262, 448.56, 559.796, 540.2922, 516.0093999999999, 490.0554, 464.0834, 520.6152000000001, 623.5952, 521.6744, 484.6035, 534.8835, 559.2999, 554.3874, 487.67159999999996, 432.80909999999994, 406.97440000000006, 324.44100000000003, 290.22479999999996, 419.6314, 480.3516, 539.9988, 460.525, 393.5262, 431.844, 525.0746, 589.0464, 620.568, 498.96220000000005, 368.3265, 352.43580000000003, 364.0582, 378.9808, 363.968, 436.2339, 437.5028, 518.9985, 449.7488, 428.4315, 431.6343, 471.7167, 524.055, 540.321, 528.7968, 589.5852, 625.1291, 527.5584, 562.811, 539.6544, 484.2292, 497.7177, 600.944, 706.8682, 807.0656, 710.2098, 641.5761000000001, 699.9961000000001, 660.3476, 676.5345000000001, 595.272, 488.17999999999995, 420.75440000000003, 521.1268, 642.3135000000001, 655.1049999999999, 579.2475000000001, 451.7996, 481.3952, 510.2811, 504.0083, 580.2456, 580.1805, 752.2528, 801.6732, 723.9838, 744.359, 570.5, 600.9372, 561.69, 607.1885, 679.6787, 682.3408, 683.1565999999999, 617.9784000000001, 557.0763999999999, 583.7487000000001, 725.1958, 719.5596, 694.107, 723.9467999999999, 588.1396, 683.6658, 671.37, 557.2944, 666.7452, 559.2384, 564.093, 572.1526, 510.88399999999996, 516.284]

    q_as_iter1 = [531.444, 438.582, 552.2576, 633.499,572.265]
    sim = Simulation(edges, m, tau, n_iters, delta_t, delta_x, v0, p_m)
    #sim.add_bottleneck(edge=2, v0=10, interval=20)
    output = sim.run(p_as_for_initial_edge = p_as_edge1, p_as_for_initial_iter=p_as_iter1, q_as_for_initial_edge = q_as_edge1, q_as_for_initial_iter = q_as_iter1)

    #plot_intervals(output,'q_a',[1,2,3,4,5])
    #plt.ylabel('Flow (#veh/h)')

    plot_intervals(output,'p_a')
    plt.ylabel('Density (#veh/km)')

    #for i in range(17,23):
    #    plot_interval(i, output, 'q_a')

    plt.xlabel('Iteration')
    plt.legend()
    plt.show()

