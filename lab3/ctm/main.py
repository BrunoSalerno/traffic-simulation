#import matplotlib
#matplotlib.use('TkAgg')
import matplotlib.pyplot as plt

import numpy as np
import pandas as pd

from ctm import Simulation

def plot_intervals(data, var, edges=None):
    for edge_i in data:
        if not edges or (edge_i in edges):
            ys = [e[var] for e in data[edge_i]]
            print('edge {}'.format(edge_i), var,ys)
            plt.plot(ys, label='{} edge {}'.format(var, edge_i))


def plot_interval(interval, data, var):
    ys =  [data[edge][interval][var] for edge in data]
    plt.plot(ys, label='Interval {}, {}'.format(interval, var))


if __name__ == '__main__':
    edges = 5
    m = 3.0
    tau = 0.5 / 3600
    n_iters = 60
    delta_t = 10 / 3600 # 10 s
    delta_x = 0.5 # 500 m
    v0 = 50.0
    p_m = 120.0

    # Rule:
    # delta_t < delta_x / v0
    # Treiber et al 2013, p. 100

    p_as_edge1 = [39.66, 45.41, 37.4, 38.44, 40.51, 45.58, 36.77, 35.85, 43.43, 43.6, 46.7, 43.85, 35.7, 30.57, 35.52, 37.18, 28.85, 25.41, 20.84, 25.27, 33.91, 34.82, 40.46, 46.66, 45.96, 49.75, 48.58, 46.55, 45.61, 38.95, 39.12, 41.48, 42.33, 38.86, 30.46, 24.35, 33.88, 38.52, 39.18, 36.59, 33.76, 30.41, 37.9, 37.18, 36.17, 38.63, 34.86, 38.08, 37.03, 40.2, 38.91, 41.49, 44.35, 37.85, 41.08, 40.15, 47.25, 45.43, 38.09, 37.97, 31.54, 40.69, 44.95, 44.65, 39.13, 38.01, 35.61, 20.58, 20.17, 22.31, 29.85, 40.3, 37.25, 40.91, 38.01, 34.68, 34.56, 39.37, 39.21, 37.15, 34.96, 33.39, 37.64, 45.59, 59.17, 65.09, 60.0, 51.57, 43.81, 40.9, 32.98, 35.85, 37.46, 37.17, 41.28, 38.2, 31.33, 33.64, 32.95, 43.87, 45.3, 39.9, 36.65, 32.91, 36.97, 39.58, 42.73, 49.3, 44.48, 42.42, 43.28, 45.67, 47.23, 50.01, 47.85, 41.39, 40.26, 50.2, 56.41, 60.36, 49.64, 47.48, 44.43, 40.1, 39.04, 37.19, 40.5, 42.63, 53.75, 56.56, 56.59, 52.32, 43.03, 39.71, 36.99, 28.56, 24.02, 24.31, 32.39, 37.3, 38.51, 40.0, 35.87, 39.17, 39.25, 42.13, 46.11, 38.33, 37.64, 36.29, 28.0, 22.24, 23.44, 32.54, 43.99, 50.27, 49.09, 51.21, 46.53, 37.15, 30.91, 28.8, 34.19, 42.16, 44.83, 50.4, 52.68, 45.14, 35.39, 23.47, 25.63, 28.38, 31.15, 40.1, 39.18, 38.11, 36.06, 33.22, 37.24, 44.96, 38.96, 36.03, 38.07, 39.03, 38.26, 33.54, 30.33, 28.42, 23.01, 20.97, 29.74, 33.78, 37.19, 32.5, 28.23, 31.8, 39.01, 43.44, 45.63, 37.07, 27.59, 25.21, 26.06, 26.84, 25.85, 30.57, 30.34, 35.67, 31.06, 30.15, 31.21, 33.67, 36.75, 38.9, 38.43, 43.32, 45.73, 38.34, 40.49, 38.88, 35.14, 36.57, 42.32, 49.57, 57.32, 51.39, 47.63, 51.89, 49.06, 50.45, 43.77, 34.87, 30.14, 37.33, 46.85, 47.3, 42.25, 32.93, 34.19, 35.91, 35.27, 40.92, 41.59, 55.64, 58.86, 53.47, 53.9, 40.75, 42.26, 39.5, 42.55, 48.17, 49.16, 49.54, 45.24, 41.48, 42.27, 52.06, 50.46, 49.65, 52.12, 42.04, 49.22, 48.65, 40.56, 49.72, 41.61, 41.94, 42.89, 37.4, 38.3]
    p_as_iter1 = [39.66,32.73,39.56,45.7,40.50]

    sim = Simulation(edges, m, tau, n_iters, delta_t, delta_x, v0, p_m)
    #sim.add_bottleneck(3, 40)
    output = sim.run(p_as_for_initial_edge = p_as_edge1, p_as_for_initial_iter=p_as_iter1)

    plot_intervals(output,'p_a',[1,2,3,4,5])
    #plot_intervals(output,'q_a')
    #plot_intervals(output,'s')
    #plot_intervals(output,'d')
    #for i in range(n_iters-1):
    #plot_interval(5, output, 'q_a')
    #plot_interval(5, output, 'q1')
    #plot_interval(6, output, 'q0')
    #plot_interval(6, output, 'q1')
    #plot_interval(7, output, 'q0')

    plt.ylabel('Density (#veh/km)')
    plt.xlabel('Iteration')
    plt.legend()
    plt.show()

